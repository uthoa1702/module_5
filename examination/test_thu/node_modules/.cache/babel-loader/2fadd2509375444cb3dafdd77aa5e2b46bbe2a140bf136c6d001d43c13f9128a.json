{"ast":null,"code":"var _jsxFileName = \"D:\\\\module_5\\\\examination\\\\test_thu\\\\src\\\\components\\\\UpdateProduct.js\",\n  _s = $RefreshSig$();\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport * as typeService from '../components/service/ProductTypeService';\nimport * as productService from '../components/service/ProductService';\nimport { useNavigate } from \"react-router-dom\";\nimport * as Swal from \"sweetalert2\";\nimport * as yup from 'yup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UpdateProduct = () => {\n  _s();\n  const [type, setType] = useState([]);\n  const [product, setProduct] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n  const findById = async () => {\n    try {\n      const res = await productService.findById(params.id);\n      await setProduct(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const showType = async () => {\n    try {\n      const res = await typeService.findAll();\n      setType(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    showType();\n    findById();\n  }, []);\n  if (!product) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        type: product.type\n      },\n      validationSchema: yup.object({\n        name: yup.string().required('Need to be filled'),\n        price: yup.number().required('Need to be filled').min(0),\n        type: yup.number().required('Need to be filled')\n      }),\n      onSubmit: values => {\n        const res = async () => {\n          console.log(values);\n          await productService.update(values);\n          await navigate('/');\n          await Swal.fire({\n            title: 'Success',\n            icon: \"success\",\n            text: 'Updated Successfully'\n          });\n        };\n        res();\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"number\",\n          name: \"price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"price\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select type--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), type && type.map(ty => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: ty.id,\n            children: ty.name\n          }, ty.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"type\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateProduct, \"nPvRPerAf4GDKn6C2NiRc9klu/8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateProduct;\nvar _c;\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"names":["ErrorMessage","Field","Form","Formik","React","useEffect","useState","typeService","productService","useNavigate","Swal","yup","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateProduct","_s","type","setType","product","setProduct","params","navigate","findById","res","id","e","console","log","showType","findAll","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","price","validationSchema","object","string","required","number","min","onSubmit","values","update","fire","title","icon","text","component","as","value","map","ty","className","_c","$RefreshReg$"],"sources":["D:/module_5/examination/test_thu/src/components/UpdateProduct.js"],"sourcesContent":["import {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport * as typeService from '../components/service/ProductTypeService'\r\nimport * as productService from '../components/service/ProductService'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport * as Swal from \"sweetalert2\";\r\nimport * as yup from 'yup'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nexport const UpdateProduct = () => {\r\n    const [type, setType] = useState([])\r\n    const [product, setProduct] = useState([])\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n\r\n    const findById = async () => {\r\n        try{\r\n            const res = await productService.findById(params.id)\r\n            await setProduct(res)\r\n\r\n        }catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n    const showType = async () => {\r\n        try {\r\n            const res = await typeService.findAll()\r\n            setType(res)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        showType()\r\n        findById()\r\n    }, [])\r\n\r\nif (!product) {\r\n    return null\r\n}\r\n    return (\r\n        <>\r\n            <h1>Update product</h1>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    id: product.id,\r\n                    name: product.name,\r\n                    price: product.price,\r\n                    type: product.type\r\n                }}\r\n                validationSchema={yup.object({\r\n                    name: yup.string().required('Need to be filled'),\r\n                    price: yup.number().required('Need to be filled').min(0),\r\n                    type: yup.number().required('Need to be filled'),\r\n\r\n                })}\r\n                onSubmit={(values) => {\r\n                    const res = async () => {\r\n\r\n                        console.log(values)\r\n                        await productService.update(values)\r\n                        await navigate('/')\r\n                        await Swal.fire({\r\n                            title: 'Success',\r\n                            icon: \"success\",\r\n                            text: 'Updated Successfully'\r\n                        })\r\n\r\n                    }\r\n                    res()\r\n                }}>\r\n\r\n                <Form>\r\n                    <label>Name</label>\r\n                    <Field type='text' name='name'/>\r\n                    <ErrorMessage name='name' component='span'/>\r\n                    <br/>\r\n\r\n                    <label>Price</label>\r\n                    <Field type='number' name='price'/>\r\n                    <ErrorMessage name='price' component='span'/>\r\n                    <br/>\r\n\r\n\r\n                    <Field as='select' name='type'>\r\n                        <option value=\"\">--Select type--</option>\r\n                        {\r\n                            type && type.map((ty) => (\r\n                                <option value={ty.id} key={ty.id}>{ty.name}</option>\r\n                            ))\r\n                        }\r\n                    </Field>\r\n                    <ErrorMessage name='type' component='span'/>\r\n                    <br/>\r\n\r\n\r\n                    <button className='btn btn-success' type=\"submit\">Submit</button>\r\n\r\n                </Form>\r\n\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}